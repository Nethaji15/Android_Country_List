apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    def db_name = "app_name_db"
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.net.demo"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 61
        versionName "2.50"
        buildConfigField "String", "DB_NAME", "\"${db_name}\""

    }
    testOptions {
        animationsDisabled true
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
    }
    buildTypes {
        release {
            debuggable false
            multiDexEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig getSigningConfig()
            android.applicationVariants.all { variant ->
                def date = new Date()
                def formattedDate = date.format('dd MMMM yyyy HH:mm')
                variant.outputs.all {
                    def newApkName
                    newApkName = "${variant.baseName}-test-${variant.versionName}, ${formattedDate}.apk"
                    outputFileName = newApkName
                }
            }
        }
        debug {
            testCoverageEnabled true
            minifyEnabled false
            multiDexEnabled true
            debuggable true
        }
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }
    flavorDimensions "enviroment"
    productFlavors {
        dev {
            dimension "enviroment"
            buildConfigField "String", "BASE_URL", "\"https://restcountries.eu/rest/v2/\""

        }


    }
    buildToolsVersion = '29.0.3'

}
def kotlin_version = '1.3.70'
def dagger2_version = '2.24'
def retrofit_version = '2.6.1'
def lifecycle_version = '2.2.0'
def okhttp_version = '4.1.0'
def timber_version = '4.7.1'
def moshi_version = '1.8.0'
def glide_version = '4.11.0'
def junit_version = '4.12'
def test_version = '1.1.1'
def room_version = "2.2.1"
def coroutine_version = "1.3.0"
def androidx_appcompat = "1.2.0"
def androidx_core = "1.3.2"
def androidx_annotation = "1.1.0"
def androidx_constraint = "2.0.4"
def google_material = "1.2.1"
def androidx_legacy = "1.0.0"
def androidx_lifecycle = "2.2.0"
def androidx_recyclerview = "1.1.0"
def circular_imageview_version = '4.1.1'
def work_version = "2.4.0"
def org_glassfish = "3.1.1"
def android_arch = "1.1.1"
def androidx_test = "1.3.0"
def google_truth = "1.0.1"
def androidx_room = "2.2.5"
def github= "4.11.0"
def github_okhttp3= "4.0.0"
def github_glide= "4.11.0"
def caverock= "1.4"
def play_location= "17.1.0"
def github_corouteam= "v2.0.0"


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat"
    implementation "androidx.core:core-ktx:$androidx_core"
    // Material
    implementation "com.google.android.material:material:$google_material"
    implementation "androidx.annotation:annotation:$androidx_annotation"
    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint"
    // LiveData & ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    //WorkManager
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    implementation "androidx.legacy:legacy-support-v4:$androidx_legacy"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    compileOnly "org.glassfish:javax.annotation:$org_glassfish"

    //androidx components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle"
    implementation "androidx.recyclerview:recyclerview:$androidx_recyclerview"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    //Ok Http
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    //Timber
    implementation "com.jakewharton.timber:timber:$timber_version"
    //Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    // JUnit
    testImplementation "junit:junit:$junit_version"
    testImplementation "android.arch.core:core-testing:$android_arch"
    androidTestImplementation "androidx.test.ext:junit:$test_version"
    androidTestImplementation "androidx.test.ext:truth:$androidx_test"
    androidTestImplementation "com.google.truth:truth:$google_truth"

    // Room
    implementation "androidx.room:room-runtime:$androidx_room"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // For Kotlin use kapt instead of annotationProcessor
    implementation "androidx.room:room-ktx:$androidx_room"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-rxjava2:$androidx_room"// optional - RxJava support for Room

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:annotations:$github"
    implementation("com.github.bumptech.glide:okhttp3-integration:$github_okhttp3") {
        exclude group: 'glide-parent'
    }
    annotationProcessor "com.github.bumptech.glide:compiler:$github_glide"
    //SVG image converter
    implementation "com.caverock:androidsvg-aar:$caverock"
    //location play service
    implementation "com.google.android.gms:play-services-location:$play_location"
    // Circular Image View
    implementation "com.mikhaellopez:circularimageview:$circular_imageview_version"
    //SVG loader
    implementation "com.github.corouteam:GlideToVectorYou:$github_corouteam"

}
